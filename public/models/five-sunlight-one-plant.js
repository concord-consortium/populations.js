// Generated by CoffeeScript 1.7.1
(function() {
  var Agent, Environment, Events, Interactive, Rule, Species, Trait, env, helpers, plantSpecies;

  helpers = require('helpers');

  Environment = require('models/environment');

  Species = require('models/species');

  Agent = require('models/agent');

  Rule = require('models/rule');

  Trait = require('models/trait');

  Interactive = require('interactive/interactive');

  Events = require('events');

  plantSpecies = require('species/varied-plants');

  env = require('environments/sunlight-flowerboxes');

  window.model = {
    run: function() {
      var agentsAdded, allAreAdult, hasFlower, shownFlowerMessage, shownNoFlowerMessage, started, stepsSinceLastAgentAdded;
      plantSpecies.defs.CAN_SEED = false;
      this.interactive = new Interactive({
        environment: env,
        addOrganismButtons: [
          {
            species: plantSpecies,
            imagePath: "images/agents/varied-plants/buttons/seedpack_10.png",
            traits: [
              new Trait({
                name: "size",
                "default": 1
              })
            ],
            limit: 20
          }
        ]
      });
      document.getElementById('environment').appendChild(this.interactive.getEnvironmentPane());
      this.env = env;
      this.plantSpecies = plantSpecies;

      /* message script */
      started = false;
      agentsAdded = 0;
      allAreAdult = false;
      hasFlower = false;
      shownNoFlowerMessage = false;
      shownFlowerMessage = false;
      stepsSinceLastAgentAdded = 0;
      Events.addEventListener(Environment.EVENTS.AGENT_ADDED, (function(_this) {
        return function(evt) {
          agentsAdded++;
          stepsSinceLastAgentAdded = 0;
          if (agentsAdded === 20 && !started) {
            return _this.showMessage("You ran out of seeds! <br/><br/> Each seed packet only has 20 seeds. <br/> Press play to start the model and watch your plants grow");
          }
        };
      })(this));
      Events.addEventListener(Environment.EVENTS.STEP, (function(_this) {
        return function() {
          var addMore, agent, _i, _len, _ref;
          if (shownFlowerMessage) {
            return;
          }
          started = true;
          stepsSinceLastAgentAdded++;
          allAreAdult = true;
          _ref = env.agents;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            agent = _ref[_i];
            if (agent.get('age') < (plantSpecies.defs.MATURITY_AGE + 20)) {
              allAreAdult = false;
            }
            if (agent.get('has flowers')) {
              hasFlower = true;
            }
          }
          if (!shownFlowerMessage && allAreAdult && hasFlower) {
            addMore = agentsAdded < 20 ? " Try planting the rest of your seeds in the other boxes." : "";
            _this.showMessage("Great! You found the right flower box for the plant.<br/><br/> Look to see how much sun the plant needs to grow a flower." + addMore);
            shownFlowerMessage = true;
            return;
          }
          if (!shownNoFlowerMessage && allAreAdult && !hasFlower && stepsSinceLastAgentAdded > 100) {
            _this.showMessage("You haven't yet found out which flower box is right for your plant.<br/><br/> Try planting the rest of your seeds in the other boxes.");
            return shownNoFlowerMessage = true;
          }
        };
      })(this));
      return Events.addEventListener(Environment.EVENTS.RESET, (function(_this) {
        return function() {
          started = false;
          agentsAdded = 0;
          allAreAdult = false;
          hasFlower = false;
          shownNoFlowerMessage = false;
          shownFlowerMessage = false;
          return stepsSinceLastAgentAdded = 0;
        };
      })(this));
    },
    showMessage: function(message) {
      return helpers.showMessage(message, this.env.getView().view.parentElement);
    },
    preload: ["images/agents/varied-plants/buttons/seedpack_10.png"]
  };

  window.onload = function() {
    return helpers.preload([model, env, plantSpecies], function() {
      return model.run();
    });
  };

}).call(this);
