// Generated by CoffeeScript 1.7.1
(function() {
  var Agent, Environment, Events, Interactive, Rule, Species, ToolButton, Trait, env, helpers, plantSpecies;

  helpers = require('helpers');

  Environment = require('models/environment');

  Species = require('models/species');

  Agent = require('models/agent');

  Rule = require('models/rule');

  Trait = require('models/trait');

  Interactive = require('interactive/interactive');

  Events = require('events');

  ToolButton = require('interactive/tool-button');

  plantSpecies = require('species/varied-plants');

  env = require('environments/sunlight-flowerboxes');

  window.model = {
    run: function() {
      plantSpecies.defs.CAN_SEED = false;
      this.interactive = new Interactive({
        environment: env,
        addOrganismButtons: [
          {
            species: plantSpecies,
            imagePath: "images/agents/varied-plants/buttons/seedpack_10.png",
            traits: [
              new Trait({
                name: "size",
                "default": 1
              }), new Trait({
                name: "root size",
                "default": 5
              })
            ],
            limit: 20
          }, {
            species: plantSpecies,
            imagePath: "images/agents/varied-plants/buttons/seedpack_6.png",
            traits: [
              new Trait({
                name: "size",
                "default": 5
              }), new Trait({
                name: "root size",
                "default": 5
              })
            ],
            limit: 20
          }, {
            species: plantSpecies,
            imagePath: "images/agents/varied-plants/buttons/seedpack_2.png",
            traits: [
              new Trait({
                name: "size",
                "default": 9
              }), new Trait({
                name: "root size",
                "default": 5
              })
            ],
            limit: 20
          }
        ]
      });
      document.getElementById('environment').appendChild(this.interactive.getEnvironmentPane());
      this.env = env;
      return this.plantSpecies = plantSpecies;
    },
    chartData: null,
    chart: null,
    startData: false,
    setupChart: function() {
      var options;
      this.chartData = new google.visualization.DataTable();
      this.chartData.addColumn('string', 'Plant Type (Leaf Size)');
      this.chartData.addColumn('number', 'Flowers');
      this.chartData.addColumn({
        type: 'string',
        role: 'style'
      });
      this.chartData.addRows([["1", 0, "color: #5942BF"], ["2", 0, "color: #904078"], ["3", 0, "color: #904078"], ["4", 0, "color: #904078"], ["5", 0, "color: #904078"], ["6", 0, "color: #904078"], ["7", 0, "color: #904078"], ["8", 0, "color: #904078"], ["9", 0, "color: #D34441"], ["10", 0, "color: #D34441"]]);
      options = {
        title: 'Number of Flowers',
        hAxis: {
          title: 'Plant Type (Leaf Size)'
        },
        vAxis: {
          title: 'Flowers',
          minValue: 0,
          maxValue: 10,
          gridlines: {
            count: 6
          }
        },
        legend: {
          position: 'none'
        },
        width: 500,
        height: 400
      };
      this.chart = new google.visualization.ColumnChart(document.getElementById('chart'));
      this.chart.draw(this.chartData, options);
      return Events.addEventListener(Environment.EVENTS.STEP, (function(_this) {
        return function() {
          var agent, changed, counts, existingCounts, _i, _len, _ref;
          if (!_this.startData) {
            return;
          }
          existingCounts = {
            1: _this.chartData.getValue(0, 1),
            5: _this.chartData.getValue(4, 1),
            9: _this.chartData.getValue(8, 1)
          };
          counts = {
            1: 0,
            5: 0,
            9: 0
          };
          _ref = _this.env.agents;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            agent = _ref[_i];
            if (agent.get('has flowers')) {
              counts[agent.get('size')] += 1;
            }
          }
          changed = existingCounts[1] !== counts[1] || existingCounts[5] !== counts[5] || existingCounts[9] !== counts[9];
          if (changed) {
            _this.chartData.setValue(0, 1, counts[1]);
            _this.chartData.setValue(4, 1, counts[5]);
            _this.chartData.setValue(8, 1, counts[9]);
            if (counts[1] > 10 || counts[5] > 10 || counts[9] > 10) {
              options.vAxis.gridlines.count = -1;
            }
            return _this.chart.draw(_this.chartData, options);
          }
        };
      })(this));
    },
    preload: ["images/agents/varied-plants/buttons/seedpack_2.png", "images/agents/varied-plants/buttons/seedpack_6.png", "images/agents/varied-plants/buttons/seedpack_10.png"]
  };

  window.onload = function() {
    return helpers.preload([model, env, plantSpecies], function() {
      var makeGraphButton;
      model.run();
      model.setupChart();
      makeGraphButton = document.getElementById('make-graph');
      return makeGraphButton.addEventListener('click', function() {
        return model.startData = true;
      });
    });
  };

}).call(this);
