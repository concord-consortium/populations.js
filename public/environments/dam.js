// Generated by CoffeeScript 1.9.1
(function() {
  var BasicAnimal, Environment, FastPlant, Rule, Trait, env;

  Environment = require('models/environment');

  Rule = require('models/rule');

  Trait = require('models/trait');

  BasicAnimal = require('models/agents/basic-animal');

  FastPlant = require('models/agents/fast-plant');

  env = new Environment({
    columns: 50,
    rows: 50,
    imgPath: "images/environments/dam-year0.png",
    seasonLengths: [30, 30, 15, 10],
    barriers: [[0, 247, 500, 20]],
    wrapEastWest: false,
    wrapNorthSouth: false
  });

  env.addRule(new Rule({
    test: function(agent) {
      return agent instanceof BasicAnimal && agent.get('prey').length === 0;
    },
    action: function(agent) {
      var trait;
      trait = new Trait({
        name: 'roots',
        possibleValues: [agent.get('size')]
      });
      return agent.set('prey', [
        {
          name: 'fast plants',
          traits: [trait]
        }
      ]);
    }
  }));

  env.addRule(new Rule({
    test: function(agent) {
      return agent instanceof FastPlant && agent.get('roots') === 1;
    },
    action: function(agent) {
      var distFrom90, dryness, pop_size_mod, water;
      water = agent.get('water') / 10.0;
      pop_size_mod = agent.get('population size modifier');
      if (water < 0.8) {
        pop_size_mod = 0;
      }
      distFrom90 = Math.max(0.9 - water, 0.0);
      dryness = Math.min(1.0, distFrom90 / 0.4);
      agent.set('chance of survival', 1 - (dryness * 0.2));
      return agent.set('growth rate', 0.04 - (dryness * .04) + pop_size_mod);
    }
  }));

  env.addRule(new Rule({
    test: function(agent) {
      return agent instanceof FastPlant && agent.get('roots') === 2;
    },
    action: function(agent) {
      var distFrom70, dryness, pop_size_mod, water;
      water = agent.get('water') / 10;
      pop_size_mod = agent.get('population size modifier');
      if (water < 0.6) {
        pop_size_mod = 0;
      }
      distFrom70 = Math.max(0.7 - water, 0.0);
      dryness = Math.min(1.0, distFrom70 / 0.4);
      agent.set('chance of survival', 1 - (dryness * 0.2));
      return agent.set('growth rate', 0.04 - (dryness * .04) + pop_size_mod);
    }
  }));

  env.addRule(new Rule({
    test: function(agent) {
      return agent instanceof FastPlant && agent.get('roots') === 3;
    },
    action: function(agent) {
      var pop_size_mod;
      pop_size_mod = agent.get('population size modifier');
      return agent.set('growth rate', 0.04 + pop_size_mod);
    }
  }));

  require.register("environments/dam", function(exports, require, module) {
    return module.exports = env;
  });

}).call(this);
