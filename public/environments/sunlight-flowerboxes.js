// Generated by CoffeeScript 1.9.1
(function() {
  var Environment, Rule, col, env, i, j, row, sunlight;

  Environment = require('models/environment');

  Rule = require('models/rule');

  env = new Environment({
    columns: 58,
    rows: 52,
    imgPath: "images/environments/sun5levels.jpg",
    barriers: [[0, 0, 95, 520], [540, 0, 40, 580], [0, 0, 580, 60], [0, 105, 580, 50], [0, 200, 580, 45], [0, 295, 580, 45], [0, 390, 580, 40], [0, 470, 580, 50]],
    wrapEastWest: true,
    wrapNorthSouth: true
  });

  for (col = i = 0; i <= 58; col = ++i) {
    for (row = j = 0; j <= 52; row = ++j) {
      sunlight = (function() {
        switch (false) {
          case !(row < 13):
            return 10;
          case !(row < 22):
            return 8;
          case !(row < 32):
            return 6;
          case !(row < 41):
            return 4;
          default:
            return 2;
        }
      })();
      env.set(col, row, "sunlight", sunlight);
    }
  }

  env.addRule(new Rule({
    test: function(agent) {
      return agent.get('age') > (agent.species.defs.SPROUT_AGE + 4);
    },
    action: function(agent) {
      var diff, health, size;
      size = agent.get('size');
      sunlight = agent.get('sunlight');
      diff = Math.abs((11 - size) - sunlight);
      health = 1 - (diff / 20);
      return agent.set('health', health);
    }
  }));

  env.addRule(new Rule({
    action: function(agent) {
      var immortal;
      immortal = agent.get('age') < (agent.species.defs.SPROUT_AGE + 10) || agent.get('health') >= 0.87;
      return agent.set('is immortal', immortal);
    }
  }));

  env.addRule(new Rule({
    action: function(agent) {
      var flowers;
      flowers = agent.get('age') > agent.species.defs.MATURITY_AGE && agent.get('health') >= 0.95;
      return agent.set('has flowers', flowers);
    }
  }));

  require.register("environments/sunlight-flowerboxes", function(exports, require, module) {
    return module.exports = env;
  });

}).call(this);
