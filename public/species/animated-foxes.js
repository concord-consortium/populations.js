// Generated by CoffeeScript 1.9.1
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  require.register("species/animated-foxes", function(exports, require, module) {
    var AnimatedAgent, BasicAnimal, Fox, Species, Trait, helpers;
    helpers = require('helpers');
    Species = require('models/species');
    BasicAnimal = require('models/agents/basic-animal');
    AnimatedAgent = require('models/agents/animated-agent');
    Trait = require('models/trait');
    Fox = (function(superClass) {
      extend(Fox, superClass);

      function Fox() {
        return Fox.__super__.constructor.apply(this, arguments);
      }

      Fox.prototype.step = function() {
        if (Math.random() < this.get('chance-hop')) {
          return this.wander();
        } else {
          return this.setMovement(AnimatedAgent.MOVEMENTS.STOP);
        }
      };

      Fox.prototype.move = function(speed) {
        var dir, dx, dy, loc, newLoc;
        dir = this.get('direction');
        if (speed == null) {
          speed = this.get('speed');
        }
        if (speed === 0) {
          return;
        }
        if (typeof speed !== 'number') {
          throw new Error('invalid speed');
        }
        if (typeof dir !== 'number') {
          throw new Error('invalid direction');
        }
        loc = this.getLocation();
        dx = speed * Math.cos(dir);
        dy = speed * Math.sin(dir);
        newLoc = {
          x: loc.x + dx,
          y: loc.y + dy
        };
        if (this.environment.crossesBarrier(loc, newLoc)) {
          return this.set('direction', dir + Math.PI);
        } else {
          this.setMovement(AnimatedAgent.MOVEMENTS.MOVESTEP);
          return this.setLocation(newLoc);
        }
      };

      return Fox;

    })(helpers.mixOf(BasicAnimal, AnimatedAgent));
    return module.exports = new Species({
      speciesName: "foxes",
      agentClass: Fox,
      defs: {
        CHANCE_OF_MUTATION: 0,
        INFO_VIEW_SCALE: 1
      },
      traits: [
        new Trait({
          name: 'speed',
          "default": 30
        }), new Trait({
          name: 'chance-hop',
          float: true,
          min: 0.01,
          max: 0.2
        })
      ],
      imageProperties: {
        initialFlipDirection: "left"
      },
      imageRules: [
        {
          name: 'fox',
          rules: [
            {
              image: {
                animations: [
                  {
                    path: "images/agents/animated-fox/fox-sprite.json",
                    movement: "move-step",
                    animationName: "walk",
                    length: 4,
                    loop: false,
                    frameRate: 20
                  }, {
                    path: "images/agents/animated-fox/fox-sprite.json",
                    movement: "stop",
                    animationName: "walk",
                    length: 1,
                    loop: false,
                    frameRate: 20
                  }
                ],
                scale: 1,
                anchor: {
                  x: 0.5,
                  y: 0.5
                }
              }
            }
          ]
        }
      ]
    });
  });

}).call(this);
